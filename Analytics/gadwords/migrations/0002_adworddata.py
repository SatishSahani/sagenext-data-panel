# Generated by Django 4.1.7 on 2023-06-23 09:51

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("gadwords", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdwordData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("network", models.CharField(max_length=100)),
                ("network_clicks", models.IntegerField()),
                ("network_cost", models.FloatField()),
                ("network_avg_cpc", models.FloatField()),
                ("campaign_name", models.CharField(max_length=100)),
                ("campaign_adgroup_name", models.CharField(max_length=100)),
                ("campaign_cost", models.FloatField()),
                ("campaign_cost_comparison", models.CharField(max_length=100)),
                ("campaign_clicks", models.IntegerField()),
                ("campaign_clicks_comparison", models.CharField(max_length=100)),
                ("campaign_interactions", models.IntegerField()),
                ("interaction_comparison", models.CharField(max_length=100)),
                ("campaign1_name", models.CharField(max_length=100)),
                ("campaign1_campaign_group_name", models.CharField(max_length=100)),
                ("campaign1_campaign_status", models.CharField(max_length=100)),
                ("campaign1_cost", models.FloatField()),
                ("campaign1_conversions", models.IntegerField()),
                ("campaign1_cost_per_conv", models.FloatField()),
                ("search", models.CharField(max_length=100)),
                ("search_cost", models.FloatField()),
                ("search_clicks", models.IntegerField()),
                ("search_impressions", models.IntegerField()),
                ("search_conversion", models.IntegerField()),
                ("search_word", models.CharField(max_length=100)),
                ("search_word_clicks", models.IntegerField()),
                ("search_word_impressions", models.IntegerField()),
                ("search_word_conversions", models.IntegerField()),
                ("search_word_cost", models.FloatField()),
                (
                    "search_word_top_containing_queries",
                    models.CharField(max_length=100),
                ),
                ("search_keyword", models.CharField(max_length=100)),
                ("search_keyword_match_type", models.CharField(max_length=100)),
                ("search_keyword_criterion_status", models.CharField(max_length=100)),
                ("search_keyword_campaign_status", models.CharField(max_length=100)),
                ("search_keyword_adgroup_status", models.CharField(max_length=100)),
                ("search_keyword_cost", models.FloatField()),
                ("search_keyword_clicks", models.IntegerField()),
                ("search_keyword_ctr", models.FloatField()),
                ("demographics_gender", models.CharField(max_length=100)),
                ("demographics_age_range", models.CharField(max_length=100)),
                ("demographics_impressions", models.IntegerField()),
                ("demographics_total_percent", models.FloatField()),
                ("device", models.CharField(max_length=100)),
                ("device_cost", models.FloatField()),
                ("device_clicks", models.IntegerField()),
                ("device_impressions", models.IntegerField()),
                ("clicks", models.IntegerField()),
                ("conversions", models.IntegerField()),
                ("cost_per_conv", models.FloatField()),
                ("cost", models.FloatField()),
                ("per_hour", models.CharField(max_length=100)),
                ("per_hour_impression", models.FloatField()),
                ("per_day", models.CharField(max_length=100)),
                ("per_day_impression", models.FloatField()),
                ("per_day_per_hour", models.CharField(max_length=100)),
                ("per_day_per_hour_impression", models.FloatField()),
                ("optimisation_score", models.FloatField()),
                ("optimisation_score_campaign_name", models.CharField(max_length=100)),
            ],
        ),
    ]
